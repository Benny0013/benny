<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Penjualan extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Penjualan_model');
    } 

    /*
     * Listing of penjualan
     */
    function index()
    {
        $data['penjualan'] = $this->Penjualan_model->get_all_penjualan();
        
        $data['_view'] = 'penjualan/index';
        $this->load->view('layouts/main',$data);
    }

    /*
     * Adding a new penjualan
     */
    function add()
    {   
        $this->load->library('form_validation');

		$this->form_validation->set_rules('id_keranjang','Id Keranjang','required|integer');
		$this->form_validation->set_rules('id_karyawan','Id Karyawan','required|integer');
		$this->form_validation->set_rules('status','Status','required|integer');
		$this->form_validation->set_rules('ongkir','Ongkir','required');
		$this->form_validation->set_rules('resi','Resi','required|max_length[25]');
		$this->form_validation->set_rules('estimasi','Estimasi','required');
		$this->form_validation->set_rules('bukti_pembayaran','Bukti Pembayaran','required|max_length[25]');
		$this->form_validation->set_rules('alamat_pengiriman','Alamat Pengiriman','required');
		
		if($this->form_validation->run())     
        {   
            $params = array(
				'id_keranjang' => $this->input->post('id_keranjang'),
				'id_karyawan' => $this->input->post('id_karyawan'),
				'status' => $this->input->post('status'),
				'ongkir' => $this->input->post('ongkir'),
				'resi' => $this->input->post('resi'),
				'estimasi' => $this->input->post('estimasi'),
				'bukti_pembayaran' => $this->input->post('bukti_pembayaran'),
				'alamat_pengiriman' => $this->input->post('alamat_pengiriman'),
            );
            
            $penjualan_id = $this->Penjualan_model->add_penjualan($params);
            redirect('penjualan/index');
        }
        else
        {            
            $data['_view'] = 'penjualan/add';
            $this->load->view('layouts/main',$data);
        }
    }  

    /*
     * Editing a penjualan
     */
    function edit($id)
    {   
        // check if the penjualan exists before trying to edit it
        $data['penjualan'] = $this->Penjualan_model->get_penjualan($id);
        
        if(isset($data['penjualan']['id']))
        {
            $this->load->library('form_validation');

			$this->form_validation->set_rules('id_keranjang','Id Keranjang','required|integer');
			$this->form_validation->set_rules('id_karyawan','Id Karyawan','required|integer');
			$this->form_validation->set_rules('status','Status','required|integer');
			$this->form_validation->set_rules('ongkir','Ongkir','required');
			$this->form_validation->set_rules('resi','Resi','required|max_length[25]');
			$this->form_validation->set_rules('estimasi','Estimasi','required');
			$this->form_validation->set_rules('bukti_pembayaran','Bukti Pembayaran','required|max_length[25]');
			$this->form_validation->set_rules('alamat_pengiriman','Alamat Pengiriman','required');
		
			if($this->form_validation->run())     
            {   
                $params = array(
					'id_keranjang' => $this->input->post('id_keranjang'),
					'id_karyawan' => $this->input->post('id_karyawan'),
					'status' => $this->input->post('status'),
					'ongkir' => $this->input->post('ongkir'),
					'resi' => $this->input->post('resi'),
					'estimasi' => $this->input->post('estimasi'),
					'bukti_pembayaran' => $this->input->post('bukti_pembayaran'),
					'alamat_pengiriman' => $this->input->post('alamat_pengiriman'),
                );

                $this->Penjualan_model->update_penjualan($id,$params);            
                redirect('penjualan/index');
            }
            else
            {
                $data['_view'] = 'penjualan/edit';
                $this->load->view('layouts/main',$data);
            }
        }
        else
            show_error('The penjualan you are trying to edit does not exist.');
    } 

    /*
     * Deleting penjualan
     */
    function remove($id)
    {
        $penjualan = $this->Penjualan_model->get_penjualan($id);

        // check if the penjualan exists before trying to delete it
        if(isset($penjualan['id']))
        {
            $this->Penjualan_model->delete_penjualan($id);
            redirect('penjualan/index');
        }
        else
            show_error('The penjualan you are trying to delete does not exist.');
    }
    
}
