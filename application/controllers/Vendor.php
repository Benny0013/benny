<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Vendor extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Vendor_model');
    } 

    /*
     * Listing of vendor
     */
    function index()
    {
        $data['vendor'] = $this->Vendor_model->get_all_vendor();
        
        $data['_view'] = 'vendor/index';
        $this->load->view('layouts/main',$data);
    }

    /*
     * Adding a new vendor
     */
    function add()
    {   
        $this->load->library('form_validation');

		$this->form_validation->set_rules('password','Password','required|max_length[32]');
		$this->form_validation->set_rules('nama','Nama','required|max_length[50]');
        $this->form_validation->set_rules('kode','Kode','required');
		$this->form_validation->set_rules('email','Email','required|max_length[100]|valid_email');
        $this->form_validation->set_rules('alamat','Alamat','required');
        $this->form_validation->set_rules('notelp','Notelp','required');
        $this->form_validation->set_rules('norek','Norek','required');
		
		if($this->form_validation->run())     
        {   
            $params = array(
				'password' => md5($this->input->post('password')),
                'kode' => $this->input->post('kode'),
				'nama' => $this->input->post('nama'),
				'email' => $this->input->post('email'),
                'alamat' => $this->input->post('alamat'),
                'notelp' => $this->input->post('notelp'),
                'norek' => $this->input->post('norek'),
            );
            
            $vendor_id = $this->Vendor_model->add_vendor($params);
            redirect('vendor/index');
        }
        else
        {            
            $data['_view'] = 'vendor/add';
            $this->load->view('layouts/main',$data);
        }
    }  

    /*
     * Editing a vendor
     */
    function edit($id)
    {   
        // check if the vendor exists before trying to edit it
        $data['vendor'] = $this->Vendor_model->get_vendor($id);
        
        if(isset($data['vendor']['id']))
        {
            $this->load->library('form_validation');

			
            $this->form_validation->set_rules('password','Password','required|max_length[32]');
            $this->form_validation->set_rules('nama','Nama','required|max_length[50]');
            $this->form_validation->set_rules('kode','Kode','required');
            $this->form_validation->set_rules('email','Email','required|max_length[100]|valid_email');
            $this->form_validation->set_rules('alamat','Alamat','required');
            $this->form_validation->set_rules('notelp','Notelp','required');
            $this->form_validation->set_rules('norek','Norek','required');
        
		
			if($this->form_validation->run())     
            {   
                $params = array(
					'password' => $this->input->post('password'),
                    'kode' => $this->input->post('kode'),
                    'nama' => $this->input->post('nama'),
                    'email' => $this->input->post('email'),
                    'alamat' => $this->input->post('alamat'),
                    'notelp' => $this->input->post('notelp'),
                    'norek' => $this->input->post('norek'),
                );

                $this->Vendor_model->update_vendor($id,$params);            
                redirect('vendor/index');
            }
            else
            {
                $data['_view'] = 'vendor/edit';
                $this->load->view('layouts/main',$data);
            }
        }
        else
            show_error('The vendor you are trying to edit does not exist.');
    } 

    /*
     * Deleting vendor
     */
    function remove($id)
    {
        $vendor = $this->Vendor_model->get_vendor($id);

        // check if the vendor exists before trying to delete it
        if(isset($vendor['id']))
        {
            $this->Vendor_model->delete_vendor($id);
            redirect('vendor/index');
        }
        else
            show_error('The vendor you are trying to delete does not exist.');
    }
    

    function login()
    {
        $this->load->view('vendor');
    }

    function login_proses(){

        $user = $this->input->post('username');
        $pass = md5($this->input->post('password'));

        $login=$this->Vendor_model->get_login($user,$pass)->num_rows();
        $log_row=$this->Vendor_model->get_login($user,$pass)->row();

        if($login>0){
            $this->session->set_userdata('usersess',
            $log_row->id);
            $this->session->set_userdata('users',
            $log_row->nama);            
            $this->session->set_userdata('kode',
            $log_row->kode);
            $this->session->set_userdata('h',TRUE);
            $this->load->helper('url');
            redirect('/Vendor/page/', 'refresh');
        }else{
            echo "<script type='text/javascript'>alert('Username atau Password Salah !');</script>";
            redirect('/Vendor/login', 'refresh');
        }
    }

    function logout(){
        $this->session->sess_destroy();
        redirect('Vendor/login','refresh');
    }

    function page(){
        $data['_view'] = 'vendor_page';
        $this->load->view('layouts/main_vendor',$data);     
    }
}
