<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Keranjang extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Keranjang_model');
    } 

    /*
     * Listing of keranjang
     */
    function index()
    {
        $data['keranjang'] = $this->Keranjang_model->get_all_keranjang();
        
        $data['_view'] = 'keranjang/index';
        $this->load->view('layouts/main',$data);
    }

    /*
     * Adding a new keranjang
     */
    function add()
    {   
        $this->load->library('form_validation');

		$this->form_validation->set_rules('id_customer','Id Customer','required|integer');
		$this->form_validation->set_rules('id_produk','Id Produk','required|integer');
		$this->form_validation->set_rules('type','Type','required|integer');
		$this->form_validation->set_rules('qty','Qty','required|integer');
		$this->form_validation->set_rules('sablon','Sablon','required|integer');
		$this->form_validation->set_rules('status','Status','required|integer');
		
		if($this->form_validation->run())     
        {   
            $params = array(
				'id_customer' => $this->input->post('id_customer'),
				'id_produk' => $this->input->post('id_produk'),
				'type' => $this->input->post('type'),
				'qty' => $this->input->post('qty'),
				'sablon' => $this->input->post('sablon'),
				'status' => $this->input->post('status'),
            );
            
            $keranjang_id = $this->Keranjang_model->add_keranjang($params);
            redirect('keranjang/index');
        }
        else
        {            
            $data['_view'] = 'keranjang/add';
            $this->load->view('layouts/main',$data);
        }
    }  

    /*
     * Editing a keranjang
     */
    function edit($id)
    {   
        // check if the keranjang exists before trying to edit it
        $data['keranjang'] = $this->Keranjang_model->get_keranjang($id);
        
        if(isset($data['keranjang']['id']))
        {
            $this->load->library('form_validation');

			$this->form_validation->set_rules('id_customer','Id Customer','required|integer');
			$this->form_validation->set_rules('id_produk','Id Produk','required|integer');
			$this->form_validation->set_rules('type','Type','required|integer');
			$this->form_validation->set_rules('qty','Qty','required|integer');
			$this->form_validation->set_rules('sablon','Sablon','required|integer');
			$this->form_validation->set_rules('status','Status','required|integer');
		
			if($this->form_validation->run())     
            {   
                $params = array(
					'id_customer' => $this->input->post('id_customer'),
					'id_produk' => $this->input->post('id_produk'),
					'type' => $this->input->post('type'),
					'qty' => $this->input->post('qty'),
					'sablon' => $this->input->post('sablon'),
					'status' => $this->input->post('status'),
                );

                $this->Keranjang_model->update_keranjang($id,$params);            
                redirect('keranjang/index');
            }
            else
            {
                $data['_view'] = 'keranjang/edit';
                $this->load->view('layouts/main',$data);
            }
        }
        else
            show_error('The keranjang you are trying to edit does not exist.');
    } 

    /*
     * Deleting keranjang
     */
    function remove($id)
    {
        $keranjang = $this->Keranjang_model->get_keranjang($id);

        // check if the keranjang exists before trying to delete it
        if(isset($keranjang['id']))
        {
            $this->Keranjang_model->delete_keranjang($id);
            redirect('keranjang/index');
        }
        else
            show_error('The keranjang you are trying to delete does not exist.');
    }
    
}
