<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Customer extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Customer_model');
    } 

    /*
     * Listing of customer
     */
    function index()
    {
        $data['customer'] = $this->Customer_model->get_all_customer();
        
        $data['_view'] = 'customer/index';
        $this->load->view('layouts/main',$data);
    }

    /*
     * Adding a new customer
     */
    function add()
    {   
        $this->load->library('form_validation');

		$this->form_validation->set_rules('password','Password','required|max_length[32]');
		$this->form_validation->set_rules('nama','Nama','required|max_length[50]');
		$this->form_validation->set_rules('email','Email','required|max_length[100]|valid_email');
		$this->form_validation->set_rules('telp','Telp','required|max_length[12]');
		$this->form_validation->set_rules('alamat','Alamat','required');
		
		if($this->form_validation->run())     
        {   
            $params = array(
				'password' => md5($this->input->post('password')),
				'nama' => $this->input->post('nama'),
				'email' => $this->input->post('email'),
				'telp' => $this->input->post('telp'),
				'alamat' => $this->input->post('alamat'),
            );
            
            $customer_id = $this->Customer_model->add_customer($params);
            redirect('customer/index');
        }
        else
        {            
            $data['_view'] = 'customer/add';
            $this->load->view('layouts/main',$data);
        }
    }  

    /*
     * Editing a customer
     */
    function edit($id)
    {   
        // check if the customer exists before trying to edit it
        $data['customer'] = $this->Customer_model->get_customer($id);
        
        if(isset($data['customer']['id']))
        {
            $this->load->library('form_validation');

			$this->form_validation->set_rules('password','Password','required|max_length[32]');
			$this->form_validation->set_rules('nama','Nama','required|max_length[50]');
			$this->form_validation->set_rules('email','Email','required|max_length[100]|valid_email');
			$this->form_validation->set_rules('telp','Telp','required|max_length[12]');
			$this->form_validation->set_rules('alamat','Alamat','required');
		
			if($this->form_validation->run())     
            {   
                $params = array(
					'password' => $this->input->post('password'),
					'nama' => $this->input->post('nama'),
					'email' => $this->input->post('email'),
					'telp' => $this->input->post('telp'),
					'alamat' => $this->input->post('alamat'),
                );

                $this->Customer_model->update_customer($id,$params);            
                redirect('customer/index');
            }
            else
            {
                $data['_view'] = 'customer/edit';
                $this->load->view('layouts/main',$data);
            }
        }
        else
            show_error('The customer you are trying to edit does not exist.');
    } 

    /*
     * Deleting customer
     */
    function remove($id)
    {
        $customer = $this->Customer_model->get_customer($id);

        // check if the customer exists before trying to delete it
        if(isset($customer['id']))
        {
            $this->Customer_model->delete_customer($id);
            redirect('customer/index');
        }
        else
            show_error('The customer you are trying to delete does not exist.');
    }
    
}
